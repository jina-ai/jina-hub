name: CI

on: [pull_request]

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: "echo \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js"
      - uses: wagoid/commitlint-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  label-pr:
    needs: commit-lint
    runs-on: ubuntu-latest
    steps:
      - uses: "pascalgn/size-label-action@v0.2.1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/labeler@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  buildx-test:
    needs: commit-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Changed Files Exporter
        id: files
        uses: futuratrepadeira/changed-files@v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          for changed_file in ${{ steps.files.outputs.files_created }}; do
            echo "${changed_file}" >> build.tmp
          done
          for changed_file in ${{ steps.files.outputs.files_updated }}; do
            echo "${changed_file}" >> build.tmp
          done
          for changed_file in ${{ steps.files.outputs.files_deleted }}; do
            echo "${changed_file}" >> build.tmp
          done
          cat build.tmp | sed 's/\(.*\)\/.*/\1/' | grep ^hub/ | uniq > build.tmp2
          cat build.tmp2
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - run: |
          echo ${{ steps.buildx.outputs.platforms }}
      - uses: actions/checkout@v2
        with:
          repository: jina-ai/jina
          path: src/jina
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Build and Test
        run: |
          if [[ -s build.tmp2 ]]; then
            pip install src/jina[docker]
            pip install src/jina[http]
            cat build.tmp2 | xargs -n1 python builder/app.py --test --target
          else
            echo "nothing to build"
          fi
        timeout-minutes: 20

